name: CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  release:
    types: [published]
  schedule:
    - cron: '00 04 * * *'  # early morning (04:00 UTC) every day

jobs:
  # checks if there has been an update in the last 24 hours
  # https://github.community/t/trigger-action-on-schedule-only-if-there-are-changes-to-the-branch/17887/4
  check_date:
    runs-on: ubuntu-latest
    name: Check latest commit
    outputs:
      should_run: ${{ steps.should_run.outputs.should_run }}
    steps:
      - uses: actions/checkout@v2

      - name: print latest_commit
        run: echo ${{ github.sha }}

      - id: should_run
        continue-on-error: true
        name: check latest commit is less than a day
        if: ${{ github.event_name == 'schedule' }}
        run: test -z $(git rev-list --after="24 hours" ${{ github.sha }}) && echo "::set-output name=should_run::false"

  build:
    needs: check_date
    # check_date does not exist if the event is not a schedule, 
    # so this if condition is alywas true unless this was a scheduled run
    # and there were no commits in the last 24 hours
    if: ${{ needs.check_date.outputs.should_run != 'false' }}
    
    name: Build Package

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - uses: actions/cache@v2
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ runner.os }}-pydeps-${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements.txt') }}

    - name: Install requirements
      run: |
        pip install -r requirements.txt

    - name: Set version name
      run: |
        # You can't set env variables to bash commands, we need
        # to export them this way instead.
        echo "CLASSY_VERSION_SUFFIX=dev$(date -u +%Y%m%d)" >> $GITHUB_ENV

    - name: Build wheel
      run: |
        echo "Building packages for pypi push"
        python setup.py bdist_wheel sdist

    - name: Save package
      uses: actions/upload-artifact@v1
      with:
        name: package
        path: dist

    - name: Clean up
      if: always()
      run: |
        pip uninstall -y classy-core

  publish:
    name: Publish to PyPI
    needs: [build]
    if: ${{ (github.repository == 'sunglasses-ai/classy') && (github.event_name == 'release' || github.event == 'schedule') }}
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install requirements
      run: |
        pip install --upgrade pip setuptools wheel twine

    - name: Download package
      uses: actions/download-artifact@v1
      with:
        name: package
        path: dist

    - name: Publish core package
      run: |
        twine upload -u ${{ secrets.PYPI_USERNAME }} -p ${{ secrets.PYPI_PASSWORD }} dist/*
